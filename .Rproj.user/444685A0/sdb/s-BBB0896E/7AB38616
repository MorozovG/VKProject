{
    "contents" : "library(\"RCurl\") # Библиотека для генерации запросов к API\nlibrary(\"jsonlite\") # Библиотека для обработки JSON\nlibrary(\"stringr\") # Библиотека для работы с текстом\n\n\n# Шаблон запроса подписок аккаунта\nurl <- \"https://api.vk.com/method/users.getSubscriptions?user_id=\" \n\n# Шаблон запроса подписчиков аккаунта\nurl2 <- \"https://api.vk.com/method/users.getFollowers?user_id=\"\n\n# Генерируем id аккаунта с replace (выбираем из 2.8 млн. id 700 аккаунтов с повторениями)\nid_num <- sample.int(280000000, size = 10000, replace = T)\n\n\n# Функция для получения id подписок для сгенерированных аккаунтов\nget_id_account <- function(id) {\n        url_get <- str_c(url, id) # Составляем запрос к API\n        resp <- getURL(url_get) # Запрашиваем и получаем ответ\n        Sys.sleep(0.5) # Задержка для обхода ограничения на кол-во запросов в сек\n        # Обрабатываем ответ и получаем id подписок\n        fromJSON(resp)$response$users$items \n}\n\n\n# Функция для получения кол-ва подписчиков аккаунта\nget_count <- function(id) {\n        url_get <- str_c(url2, id)\n        resp <- getURL(url_get)\n        Sys.sleep(0.5)\n        fromJSON(resp)$response$count\n}\n\n# Получаем, при помощи функции get_id_account, id подписок для аккаунтов в виде list\naccount_id <- sapply(id_num, get_id_account)\n\n# Преобразовываем list в data.frame\naccount_id <- unlist(account_id)\n\n# Подсчитываем кол-во попаданий для каждого id полученных аккаунтов\naccount_id <- table(account_id)\n\n# Преобразовываем в data.frame\naccount_id <- as.data.frame(account_id)\n\n# Сортируем в убывающем порядке\naccount_id <- account_id[order(-account_id$Freq),]\n\n# Получаем, при помощи функции get_count, кол-во подписчиков\nresult <- sapply(as.numeric(as.character(account_id$account_id[1:300])), get_count)\n\n# Объединяем полученные данные о кол-ве подписчиков с id аккаунтов\nresult <- cbind(as.numeric(as.character(account_id$account_id[1:300])), result)\n\n# Сортируем в убывающем порядке\nresult <- result[order(-result[,2]),]\n\nresult <- data.frame(id = result[,1], count_of_followers = result[, 2])\n\nwrite.csv(result, \"result_subscribers.csv\")\n",
    "created" : 1440572729967.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "363668136",
    "id" : "7AB38616",
    "lastKnownWriteTime" : 1440679768,
    "path" : "G:/R lang/VKProject/Subscribers.R",
    "project_path" : "Subscribers.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}